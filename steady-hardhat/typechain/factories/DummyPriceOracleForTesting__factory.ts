/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DummyPriceOracleForTesting,
  DummyPriceOracleForTestingInterface,
} from "../DummyPriceOracleForTesting";

const _abi = [
  {
    inputs: [],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestAnswer",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_latestAnswer",
        type: "int256",
      },
    ],
    name: "setLatestAnswer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_price",
        type: "int256",
      },
    ],
    name: "setLatestPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101b0806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806304ea97b01461005157806350d25bcd1461006d578063805fe7fb1461008b5780638e15f473146100a7575b600080fd5b61006b60048036038101906100669190610123565b6100c5565b005b6100756100cf565b604051610082919061015f565b60405180910390f35b6100a560048036038101906100a09190610123565b6100d5565b005b6100af6100df565b6040516100bc919061015f565b60405180910390f35b8060018190555050565b60015481565b8060008190555050565b60008054905090565b600080fd5b6000819050919050565b610100816100ed565b811461010b57600080fd5b50565b60008135905061011d816100f7565b92915050565b600060208284031215610139576101386100e8565b5b60006101478482850161010e565b91505092915050565b610159816100ed565b82525050565b60006020820190506101746000830184610150565b9291505056fea26469706673582212203eee7c3703063d1fc19be7166e5917fbe61ebb810246a87d2b3c37b42f0115bc64736f6c63430008100033";

export class DummyPriceOracleForTesting__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummyPriceOracleForTesting> {
    return super.deploy(overrides || {}) as Promise<DummyPriceOracleForTesting>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyPriceOracleForTesting {
    return super.attach(address) as DummyPriceOracleForTesting;
  }
  connect(signer: Signer): DummyPriceOracleForTesting__factory {
    return super.connect(signer) as DummyPriceOracleForTesting__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyPriceOracleForTestingInterface {
    return new utils.Interface(_abi) as DummyPriceOracleForTestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummyPriceOracleForTesting {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DummyPriceOracleForTesting;
  }
}
